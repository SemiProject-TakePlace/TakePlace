################
# Product 관련 SQL
################

## 모든 조회는 가격 낮은 순 포함 ##

# 공간 전체 리스트 조회 

selectList = SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
				P.PNAME, P.PPRICE, P.PRATING, P.PISOK, P.BSNUM FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (P.BSNUM = H.BSNUM) \
				WHERE P.PISOK = 'Y' AND IMGLEVEL = 0 AND P.ISDELETE = 'N' \
                ORDER BY P.PNO DESC
            
# 스터디 공간 리스트 조회
selectStudyList = SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
				P.PNAME, P.PPRICE, P.PRATING, P.PISOK FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				WHERE P.PISOK = 'Y' AND P.PTYPE='STUDY' \
				AND IMGLEVEL = 0 AND P.ISDELETE = 'N' \
                ORDER BY P.PNO DESC
				
# 스튜디오 공간 리스트 조회
selectStudioList = SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
				P.PNAME, P.PPRICE, P.PRATING, P.PISOK FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				WHERE P.PISOK = 'Y' AND P.PTYPE='STUDIO' \
				AND IMGLEVEL = 0 AND P.ISDELETE = 'N' \
                ORDER BY P.PNO DESC
				
# 세미나 공간 리스트 조회
selectSeminarList = SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
				P.PNAME, P.PPRICE, P.PRATING, P.PISOK FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				WHERE P.PISOK = 'Y' AND P.PTYPE='SEMINAR' \
				AND IMGLEVEL = 0 AND P.ISDELETE = 'N' \
                ORDER BY P.PNO DESC

# 파티룸 공간 리스트 조회
selectPartyList = SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
				P.PNAME, P.PPRICE, P.PRATING, P.PISOK FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				WHERE P.PISOK = 'Y' AND P.PTYPE='PARTY' \
				AND IMGLEVEL = 0  AND P.ISDELETE = 'N' \
                ORDER BY P.PNO DESC
				
# 오피스 공간 리스트 조회
selectOfficeList = SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
				P.PNAME, P.PPRICE, P.PRATING, P.PISOK FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				WHERE P.PISOK = 'Y' AND P.PTYPE='OFFICE' \
				AND IMGLEVEL = 0 AND P.ISDELETE = 'N' \
                ORDER BY P.PNO DESC
				
# 공간 제목으로 검색
searchPname = SELECT * FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				WHERE IMGLEVEL = 0 AND P.ISDELETE = 'N' \
				AND PNAME LIKE '%' || ? || '%'

# 호스트명으로 검색
searchMname = SELECT * FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				JOIN MEMBER M ON(M.MNO = H.MNO) \
				WHERE IMGLEVEL = 0 AND P.ISDELETE = 'N' \
				AND MNAME LIKE '%' || ? || '%'

# 도시로 검색
searchPcity = SELECT * FROM PRODUCT P \
				JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
				JOIN HOST H ON (H.BSNUM = P.BSNUM) \
				WHERE IMGLEVEL = 0 AND P.ISDELETE = 'N'\
				AND PCITY LIKE '%' || ? || '%'
# 공간 상세 조회			
selectOne = SELECT * FROM PRODUCT P \
			JOIN PRODUCT_IMAGES PI ON(P.PNO = PI.PNO) \
			JOIN HOST H ON (H.BSNUM = P.BSNUM) \
			JOIN MEMBER M ON(H.MNO = M.MNO) \
			WHERE P.ISDELETE = 'N' \
				AND P.PNO = ? 
				
# 상품 평균 점수
updateProductRating = UPDATE PRODUCT SET PRATING = (SELECT AVG(RRATING) RRATING \
    					FROM PRODUCT_REVIEW \
    					WHERE PNO = ? AND RLEVEL = 1) WHERE PNO = ?
    			
    			
    		
					
# STUDY 공간 등록
insertStudyProduct = INSERT INTO PRODUCT \
				VALUES(PD_SEQ.NEXTVAL, ?, 'STUDY', ?, ?, \
				?, ?, ?, ?, ?,\
				'N', DEFAULT, SYSDATE, NULL, 'N', 0)
				
# STUDIO 공간 등록
insertStudioProduct = INSERT INTO PRODUCT \
				VALUES(PD_SEQ.NEXTVAL, ?, 'STUDIO', ?, ?, \
				?, ?, ?, ?, ?,\
				'N', DEFAULT, SYSDATE, NULL, 'N', 0)
				
# SEMINAR 공간 등록
insertSeminarProduct = INSERT INTO PRODUCT \
				VALUES(PD_SEQ.NEXTVAL, ?, 'SEMINAR', ?, ?, \
				?, ?, ?, ?, ?,\
				'N', DEFAULT, SYSDATE, NULL, 'N', 0)
				
# PARTY 공간 등록
insertPartyProduct = INSERT INTO PRODUCT \
				VALUES(PD_SEQ.NEXTVAL, ?, 'PARTY', ?, ?, \
				?, ?, ?, ?, ?,\
				'N', DEFAULT, SYSDATE, NULL, 'N', 0)
				
# OFFICE 공간 등록
insertOfficeProduct = INSERT INTO PRODUCT \
				VALUES(PD_SEQ.NEXTVAL, ?, 'OFFICE', ?, ?, \
				?, ?, ?, ?, ?,\
				'N', DEFAULT, SYSDATE, NULL, 'N', 0)
				
# 가장 최근에 추가한 게시글의 번호
currentPno = SELECT MAX(PNO) FROM PRODUCT \
          WHERE ISDELETE = 'N'
          # TEST 끝나면 POKDATE = Y 도 추가
          
# 사진 추가
insertProductImages = INSERT INTO PRODUCT_IMAGES \
						VALUES (IMG_SEQ.NEXTVAL, ?, ?, ?, ?, ?, SYSDATE, 'N')
						
						
# 인기 공간 조회 SQL
productsTop =  SELECT * FROM ( \
					SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
					P.PNAME, P.PPRICE, P.PRATING FROM PRODUCT P \
					JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
					JOIN HOST H ON (P.BSNUM = H.BSNUM) \
					WHERE P.PISOK = 'Y' AND IMGLEVEL = 0 AND P.ISDELETE = 'N' AND 1=1 \
					ORDER BY PRATING DESC) PRO \
				WHERE 1=1  AND ROWNUM <= 8

# 메인 - 최근 등록된 상품 8개
selectRecent8 = SELECT * FROM ( \
        						SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, \
        						P.PNAME, P.PPRICE, P.PRATING FROM PRODUCT P \
								JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
								JOIN HOST H ON (P.BSNUM = H.BSNUM) \
								WHERE P.PISOK = 'Y' AND IMGLEVEL = 0 AND P.ISDELETE = 'N' AND 1=1 \
            					ORDER BY PNO DESC) PRO \
            			WHERE 1=1  AND ROWNUM <= 8

# 공간 수정
updateProduct = UPDATE PRODUCT \
				SET PNAME = ?, PPRICE = ?, PABLEDATE = ?, PGUIDE = ?, PWARN = ?, PISOK = 'N' \
				WHERE PNO = ?
				
# 공간 이미지 수정
updateProductImages = UPDATE PRODUCT_IMAGES \
						SET ORIGINNAME = ?, CHANGENAME = ? \
						WHERE PIMGNO = ?
						
# 메인 - 인기 상품 8개						
selectTop8 = SELECT P.PNO, H.MNO, PI.CHANGENAME, P.PTYPE, P.PCITY, P.PNAME, P.PPRICE, P.PRATING FROM PRODUCT P \
    		  JOIN PRODUCT_IMAGES PI ON (P.PNO = PI.PNO) \
    		  JOIN HOST H ON (H.BSNUM = P.BSNUM) \
   				 WHERE IMGLEVEL = 0 AND P.ISDELETE = 'N' AND ROWNUM <= 8\
    			 ORDER BY PRATING ASC, (PRATING + PBOOKCNT) ASC, PBOOKCNT ASC, PREQDATE DESC
    			 
 # 공간 삭제
 deleteProduct = UPDATE PRODUCT SET ISDELETE = 'Y' WHERE PNO = ?
 
 # 리뷰등록가능한  이용자
 ableReviewr = SELECT MEMBER.MNO \
				FROM MEMBER LEFT OUTER JOIN PAYRECORD \
				ON (MEMBER.MNO = PAYRECORD.MNO) \
				WHERE MEMBER.MNO = ?